/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is not neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/index.js":
/*!*************************!*
  !*** ./src/js/index.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scss_style_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../scss/style.scss */ \"./src/scss/style.scss\");\n\nwindow.addEventListener('DOMContentLoaded', function () {\n  var inputs = document.querySelectorAll('input'),\n      costInput = document.querySelector('#cost-input'),\n      contributionInput = document.querySelector('#contribution-input'),\n      anchorsBtnWrap = document.querySelector('.anchors'),\n      anchorsBtn = document.querySelectorAll('.anchors__btn'),\n      creditTermtInput = document.querySelector('.credit-input'),\n      rateInput = document.querySelector('.rate-input'),\n      monthlyPayment = document.querySelector('#monthly-payment'),\n      overpaymentOutPut = document.querySelector('#overpayment'),\n      necessaryIncomeOutPut = document.querySelector('#necessary-income'),\n      credit = document.querySelector('#credit'),\n      buttonsSave = document.querySelector('.interaction-buttons__save'),\n      buttonsClear = document.querySelector('.interaction-buttons__clear');\n  costInput.addEventListener('input', calcLoanPrincipal);\n  contributionInput.addEventListener('input', calcLoanPrincipal);\n  creditTermtInput.addEventListener('input', calcRateInputValue);\n  rateInput.addEventListener('input', calcRateInputValue);\n  buttonsClear.addEventListener('click', clearInputValue);\n\n  function getMaskedValue(val) {\n    return val.toString().replace(/[^\\d]/g, '').replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n  }\n\n  function deleteSpace(val) {\n    return val.toString().split(' ').join('');\n  }\n\n  function inputValueCorrection() {\n    inputs.forEach(function (event) {\n      event.addEventListener('input', function (e) {\n        e.target.value = getMaskedValue(e.target.value);\n      });\n    });\n  }\n\n  inputValueCorrection();\n\n  function calcLoanPrincipal() {\n    valueСorrection();\n    var arrWithValueInputCost = [];\n    var arrWithValueInputContribution = [];\n    var currentCostInpValue = costInput.value;\n    var currentContributionInputValue = contributionInput.value;\n    arrWithValueInputCost.push(currentCostInpValue);\n    arrWithValueInputContribution.push(currentContributionInputValue);\n    var varWithStringValueCost = '';\n    var varWithStringValueContribution = '';\n\n    for (var i = 0; i < arrWithValueInputCost.length; i++) {\n      for (var j = 0; j < arrWithValueInputContribution.length; j++) {\n        varWithStringValueContribution = deleteSpace(arrWithValueInputContribution[j]);\n      }\n\n      varWithStringValueCost = deleteSpace(arrWithValueInputCost[i]);\n    }\n\n    var result = varWithStringValueCost - varWithStringValueContribution;\n    credit.innerText = getMaskedValue(result);\n    calcPercent(varWithStringValueCost);\n    calcOverpayment(currentCostInpValue, currentContributionInputValue);\n    calcRateInputValue();\n  }\n\n  function addClassActive() {\n    anchorsBtn.forEach(function (event) {\n      event.addEventListener('click', function () {\n        anchorsBtnWrap.querySelector('.active').classList.remove('active');\n        event.classList.add('active');\n      });\n    });\n  }\n\n  addClassActive();\n\n  function calcPercent(currentCostInpValue) {\n    anchorsBtn.forEach(function (event) {\n      event.addEventListener('click', function (e) {\n        if (!costInput.value) {\n          contributionInput.value = null;\n        } else {\n          var splitByNumber = e.target.innerText;\n          var reverseNumber = parseInt(splitByNumber) / 100;\n          var total = currentCostInpValue * reverseNumber;\n          contributionInput.value = getMaskedValue(Math.round(total));\n          var resultCalc = currentCostInpValue - total;\n          credit.innerText = getMaskedValue(Math.round(resultCalc));\n          calcRateInputValue();\n        }\n      });\n    });\n  }\n\n  function calcRateInputValue() {\n    var rateInputValue = rateInput.value;\n    var loanPrincipalValue = deleteSpace(credit.innerHTML);\n    var creditTerm = creditTermtInput.value;\n    calcMonthlyPayment(loanPrincipalValue, rateInputValue, creditTerm);\n  }\n\n  function calcMonthlyPayment(c, i, n) {\n    var calcRate = i / 1200;\n    var numberOfMonthly = n * 12;\n    var powValue = Math.pow(1 + calcRate, numberOfMonthly) - 1;\n    var divideInteresRate = calcRate / powValue;\n    var addition = calcRate + divideInteresRate;\n    var sum = (c * addition).toFixed(0);\n    monthlyPayment.innerText = getMaskedValue(sum);\n    calcNecessaryIncome(sum, numberOfMonthly);\n  }\n\n  function calcNecessaryIncome(p, n) {\n    var overpaymentValue = (5 * p / 3).toFixed(0);\n    necessaryIncomeOutPut.innerText = getMaskedValue(overpaymentValue);\n    calcOverpayment(p, n);\n  }\n\n  var calcOverpayment = function calcOverpayment(p, n) {\n    var costValue = deleteSpace(costInput.value);\n    var contributionValue = deleteSpace(contributionInput.value);\n    var sumOverpayment = p * n - Number(costValue) + Number(contributionValue);\n    overpaymentOutPut.innerText = getMaskedValue(sumOverpayment);\n  };\n\n  var valueСorrection = function valueСorrection() {\n    var costVal = deleteSpace(costInput.value);\n    var contributionVal = deleteSpace(contributionInput.value);\n    var numCost = +costVal;\n    var numContribution = +contributionVal;\n\n    if (numCost < numContribution) {\n      costInput.value = '';\n      contributionInput.value = '';\n    }\n  };\n\n  function clearInputValue() {\n    costInput.value = '';\n    contributionInput.value = '';\n    creditTermtInput.value = '';\n    rateInput.value = '';\n    overpaymentOutPut.innerText = '';\n    necessaryIncomeOutPut.innerText = '';\n    credit.innerText = '';\n    monthlyPayment.innerText = '';\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/index.js\n");

/***/ }),

/***/ "./src/scss/style.scss":
/*!*****************************!*
  !*** ./src/scss/style.scss ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZXN0Ly4vc3JjL3Njc3Mvc3R5bGUuc2Nzcz85OGFmIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSIsImZpbGUiOiIuL3NyYy9zY3NzL3N0eWxlLnNjc3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scss/style.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	// startup
/******/ 	// Load entry module
/******/ 	__webpack_require__("./src/js/index.js");
/******/ 	// This entry module used 'exports' so it can't be inlined
/******/ })()
;